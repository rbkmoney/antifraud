/*
 * This file is generated by jOOQ.
*/
package com.rbkmoney.antifraud.domain.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payment implements Serializable {

    private static final long serialVersionUID = 305290789;

    private String invoiceId;
    private String paymentId;
    private String partyId;
    private String shopId;
    private String clientIp;
    private String clientEmail;
    private String clientFingerprint;
    private String cardMask;
    private String cardToken;
    private Long   amount;
    private String currency;
    private String description;
    private String shopName;
    private String shopUrl;

    public Payment() {}

    public Payment(Payment value) {
        this.invoiceId = value.invoiceId;
        this.paymentId = value.paymentId;
        this.partyId = value.partyId;
        this.shopId = value.shopId;
        this.clientIp = value.clientIp;
        this.clientEmail = value.clientEmail;
        this.clientFingerprint = value.clientFingerprint;
        this.cardMask = value.cardMask;
        this.cardToken = value.cardToken;
        this.amount = value.amount;
        this.currency = value.currency;
        this.description = value.description;
        this.shopName = value.shopName;
        this.shopUrl = value.shopUrl;
    }

    public Payment(
        String invoiceId,
        String paymentId,
        String partyId,
        String shopId,
        String clientIp,
        String clientEmail,
        String clientFingerprint,
        String cardMask,
        String cardToken,
        Long   amount,
        String currency,
        String description,
        String shopName,
        String shopUrl
    ) {
        this.invoiceId = invoiceId;
        this.paymentId = paymentId;
        this.partyId = partyId;
        this.shopId = shopId;
        this.clientIp = clientIp;
        this.clientEmail = clientEmail;
        this.clientFingerprint = clientFingerprint;
        this.cardMask = cardMask;
        this.cardToken = cardToken;
        this.amount = amount;
        this.currency = currency;
        this.description = description;
        this.shopName = shopName;
        this.shopUrl = shopUrl;
    }

    public String getInvoiceId() {
        return this.invoiceId;
    }

    public void setInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
    }

    public String getPaymentId() {
        return this.paymentId;
    }

    public void setPaymentId(String paymentId) {
        this.paymentId = paymentId;
    }

    public String getPartyId() {
        return this.partyId;
    }

    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }

    public String getShopId() {
        return this.shopId;
    }

    public void setShopId(String shopId) {
        this.shopId = shopId;
    }

    public String getClientIp() {
        return this.clientIp;
    }

    public void setClientIp(String clientIp) {
        this.clientIp = clientIp;
    }

    public String getClientEmail() {
        return this.clientEmail;
    }

    public void setClientEmail(String clientEmail) {
        this.clientEmail = clientEmail;
    }

    public String getClientFingerprint() {
        return this.clientFingerprint;
    }

    public void setClientFingerprint(String clientFingerprint) {
        this.clientFingerprint = clientFingerprint;
    }

    public String getCardMask() {
        return this.cardMask;
    }

    public void setCardMask(String cardMask) {
        this.cardMask = cardMask;
    }

    public String getCardToken() {
        return this.cardToken;
    }

    public void setCardToken(String cardToken) {
        this.cardToken = cardToken;
    }

    public Long getAmount() {
        return this.amount;
    }

    public void setAmount(Long amount) {
        this.amount = amount;
    }

    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getShopName() {
        return this.shopName;
    }

    public void setShopName(String shopName) {
        this.shopName = shopName;
    }

    public String getShopUrl() {
        return this.shopUrl;
    }

    public void setShopUrl(String shopUrl) {
        this.shopUrl = shopUrl;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Payment other = (Payment) obj;
        if (invoiceId == null) {
            if (other.invoiceId != null)
                return false;
        }
        else if (!invoiceId.equals(other.invoiceId))
            return false;
        if (paymentId == null) {
            if (other.paymentId != null)
                return false;
        }
        else if (!paymentId.equals(other.paymentId))
            return false;
        if (partyId == null) {
            if (other.partyId != null)
                return false;
        }
        else if (!partyId.equals(other.partyId))
            return false;
        if (shopId == null) {
            if (other.shopId != null)
                return false;
        }
        else if (!shopId.equals(other.shopId))
            return false;
        if (clientIp == null) {
            if (other.clientIp != null)
                return false;
        }
        else if (!clientIp.equals(other.clientIp))
            return false;
        if (clientEmail == null) {
            if (other.clientEmail != null)
                return false;
        }
        else if (!clientEmail.equals(other.clientEmail))
            return false;
        if (clientFingerprint == null) {
            if (other.clientFingerprint != null)
                return false;
        }
        else if (!clientFingerprint.equals(other.clientFingerprint))
            return false;
        if (cardMask == null) {
            if (other.cardMask != null)
                return false;
        }
        else if (!cardMask.equals(other.cardMask))
            return false;
        if (cardToken == null) {
            if (other.cardToken != null)
                return false;
        }
        else if (!cardToken.equals(other.cardToken))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (currency == null) {
            if (other.currency != null)
                return false;
        }
        else if (!currency.equals(other.currency))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (shopName == null) {
            if (other.shopName != null)
                return false;
        }
        else if (!shopName.equals(other.shopName))
            return false;
        if (shopUrl == null) {
            if (other.shopUrl != null)
                return false;
        }
        else if (!shopUrl.equals(other.shopUrl))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((invoiceId == null) ? 0 : invoiceId.hashCode());
        result = prime * result + ((paymentId == null) ? 0 : paymentId.hashCode());
        result = prime * result + ((partyId == null) ? 0 : partyId.hashCode());
        result = prime * result + ((shopId == null) ? 0 : shopId.hashCode());
        result = prime * result + ((clientIp == null) ? 0 : clientIp.hashCode());
        result = prime * result + ((clientEmail == null) ? 0 : clientEmail.hashCode());
        result = prime * result + ((clientFingerprint == null) ? 0 : clientFingerprint.hashCode());
        result = prime * result + ((cardMask == null) ? 0 : cardMask.hashCode());
        result = prime * result + ((cardToken == null) ? 0 : cardToken.hashCode());
        result = prime * result + ((amount == null) ? 0 : amount.hashCode());
        result = prime * result + ((currency == null) ? 0 : currency.hashCode());
        result = prime * result + ((description == null) ? 0 : description.hashCode());
        result = prime * result + ((shopName == null) ? 0 : shopName.hashCode());
        result = prime * result + ((shopUrl == null) ? 0 : shopUrl.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Payment (");

        sb.append(invoiceId);
        sb.append(", ").append(paymentId);
        sb.append(", ").append(partyId);
        sb.append(", ").append(shopId);
        sb.append(", ").append(clientIp);
        sb.append(", ").append(clientEmail);
        sb.append(", ").append(clientFingerprint);
        sb.append(", ").append(cardMask);
        sb.append(", ").append(cardToken);
        sb.append(", ").append(amount);
        sb.append(", ").append(currency);
        sb.append(", ").append(description);
        sb.append(", ").append(shopName);
        sb.append(", ").append(shopUrl);

        sb.append(")");
        return sb.toString();
    }
}
